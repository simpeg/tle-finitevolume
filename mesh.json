{"kind":"Notebook","sha256":"a2596e666b81fa0e3f8064a533bcb55c21fc65190af0f653f4b0e7dbe74de237","slug":"mesh","dependencies":[],"frontmatter":{"title":"Finite Volume Mesh","authors":[{"name":"Rowan Cockett","orcid":"0000-0002-7859-8394","corresponding":true,"email":"rowan@curvenote.com","affiliations":["University of British Columbia"]},{"name":"Lindsey Heagy","orcid":"0000-0002-1551-5926","affiliations":["University of British Columbia"]},{"name":"Douglas Oldenburg","orcid":"0000-0002-4327-2124","affiliations":["University of British Columbia"]}],"date":"2016/08/01","doi":"10.1190/tle35080703.1","open_access":true,"license":{"content":{"id":"CC-BY-SA-3.0","name":"Creative Commons Attribution Share Alike 3.0 Unported","CC":true,"url":"https://creativecommons.org/licenses/by-sa/3.0/"},"code":{"id":"MIT","name":"MIT License","osi":true,"free":true,"url":"https://opensource.org/licenses/MIT"}},"github":"https://github.com/simpeg/tle-finitevolume","subject":"tutorial","venue":{"title":"The Leading Edge"},"thumbnail":"/tle-finitevolume/build/mesh-a3ac6781c8618040050358cb5be16134.png","exports":[{"format":"ipynb","filename":"mesh.ipynb","url":"/tle-finitevolume/build/mesh-9e56a5e59dcd50dd776c1f2958bd1cfc.ipynb"}]},"mdast":{"type":"root","children":[{"type":"block","children":[{"type":"container","kind":"figure","identifier":"fig-mesh","label":"fig-mesh","children":[{"type":"image","url":"/tle-finitevolume/build/mesh-a3ac6781c8618040050358cb5be16134.png","alt":"Anatomy of a finite volume cell.","urlSource":"../images/mesh.png","key":"mqd8BcH3eJ"},{"type":"caption","children":[{"type":"paragraph","position":{"start":{"line":7,"column":0},"end":{"line":8,"column":0}},"children":[{"type":"captionNumber","kind":"figure","label":"fig-mesh","identifier":"fig-mesh","html_id":"fig-mesh","enumerator":"1","children":[{"type":"text","value":"Figure ","key":"kiDtLzUYcB"},{"type":"text","value":"1","key":"zzhSsJ3wTZ"},{"type":"text","value":":","key":"ktIKPyYQ6V"}],"template":"Figure %s:","key":"rMV0WtZe5a"},{"type":"text","value":"Anatomy of a finite volume cell.","key":"x7jNQSyF53"}],"key":"JvFw4RmWWL"}],"key":"xPOo9ZbioF"}],"enumerator":"1","html_id":"fig-mesh","key":"DkJlF61JYK"}],"key":"zPSxAzYqbd"},{"type":"block","position":{"start":{"line":10,"column":0},"end":{"line":11,"column":0}},"children":[{"type":"paragraph","position":{"start":{"line":12,"column":0},"end":{"line":13,"column":0}},"children":[{"type":"text","value":"To bring our continuous equations into the computer, we need to discretize the earth and represent it using a finite(!) set of numbers. In this tutorial we will explain the discretization in 2D and generalize to 3D in the notebooks. A 2D (or 3D!) mesh is used to divide up space, and we can represent functions (fields, parameters, etc.) on this mesh at a few discrete places: the nodes, edges, faces, or cell centers. For consistency between 2D and 3D we refer to faces having area and cells having volume, regardless of their dimensionality. Nodes and cell centers naturally hold scalar quantities while edges and faces have implied directionality and therefore naturally describe vectors. The conductivity, ","key":"FqnvCsuxtC"},{"type":"inlineMath","value":"\\sigma","html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>σ</mi></mrow><annotation encoding=\"application/x-tex\">\\sigma</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span></span></span></span>","key":"tQljFzpiXt"},{"type":"text","value":", changes as a function of space, and is likely to have discontinuities (e.g. if we cross a geologic boundary). As such, we will represent the conductivity as a constant over each cell, and discretize it at the center of the cell. The electrical current density, ","key":"uygJleugyF"},{"type":"inlineMath","value":"\\vec{j}","html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>j</mi><mo>⃗</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\vec{j}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.137em;vertical-align:-0.1944em;\"></span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9425em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span><span style=\"top:-3.2285em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2355em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1944em;\"><span></span></span></span></span></span></span></span></span>","key":"XRo8YNsneq"},{"type":"text","value":", will be continuous across conductivity interfaces, and therefore, we will represent it on the faces of each cell. Remember that ","key":"TzNBo1gWQZ"},{"type":"inlineMath","value":"\\vec{j}","html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>j</mi><mo>⃗</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\vec{j}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.137em;vertical-align:-0.1944em;\"></span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9425em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span><span style=\"top:-3.2285em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2355em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1944em;\"><span></span></span></span></span></span></span></span></span>","key":"iOJTQEnEPV"},{"type":"text","value":" is a vector; the direction of it is implied by the mesh definition (i.e. in ","key":"IfelwaH6LR"},{"type":"inlineMath","value":"x","html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span>","key":"PduxjT9Uqm"},{"type":"text","value":", ","key":"hHU9qBotgQ"},{"type":"inlineMath","value":"y","html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span>","key":"szA6LDKrCU"},{"type":"text","value":" or ","key":"WFxKbcrAcQ"},{"type":"inlineMath","value":"z","html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>z</mi></mrow><annotation encoding=\"application/x-tex\">z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span></span></span></span>","key":"xFJ5jhdNk9"},{"type":"text","value":"), so we can store the array ","key":"u3RswUHsTc"},{"type":"inlineMath","value":"\\bf{j}","html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"bold\">j</mi></mrow><annotation encoding=\"application/x-tex\">\\bf{j}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">j</span></span></span></span></span></span>","key":"rW6sgUzP26"},{"type":"text","value":" as ","key":"SsxpaXuje2"},{"type":"emphasis","children":[{"type":"text","value":"scalars","key":"A4Bf4UfKdg"}],"key":"OPhWRQThjn"},{"type":"text","value":" that live on the face and inherit the face's normal. When ","key":"oGQpBRqzpI"},{"type":"inlineMath","value":"\\vec{j}","html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>j</mi><mo>⃗</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\vec{j}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.137em;vertical-align:-0.1944em;\"></span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9425em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span><span style=\"top:-3.2285em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2355em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1944em;\"><span></span></span></span></span></span></span></span></span>","key":"OnFCOdqpHF"},{"type":"text","value":" is defined on the faces of a cell the potential, ","key":"aog53dSqog"},{"type":"inlineMath","value":"\\vec{\\phi}","html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>ϕ</mi><mo>⃗</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\vec{\\phi}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1719em;vertical-align:-0.1944em;\"></span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9774em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">ϕ</span></span><span style=\"top:-3.2634em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1944em;\"><span></span></span></span></span></span></span></span></span>","key":"wnr9YSiSZf"},{"type":"text","value":", will be put on the cell centers (since ","key":"KjBtuVJDmr"},{"type":"inlineMath","value":"\\vec{j}","html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>j</mi><mo>⃗</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\vec{j}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.137em;vertical-align:-0.1944em;\"></span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9425em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span><span style=\"top:-3.2285em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2355em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1944em;\"><span></span></span></span></span></span></span></span></span>","key":"Pmdvd7owta"},{"type":"text","value":" is related to ","key":"sq2plUiSO5"},{"type":"inlineMath","value":"\\phi","html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ϕ</mi></mrow><annotation encoding=\"application/x-tex\">\\phi</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">ϕ</span></span></span></span>","key":"Mv8JUoOXdw"},{"type":"text","value":" through spatial derivatives, it allows us to approximate centered derivatives leading to a staggered, second-order discretization).","key":"Jp5MtEEDF1"}],"key":"G9BjvL3qtM"}],"data":{"id":"nb-cell-1","type":"notebook-content","iooxa":{"id":{"block":"NPlSxyqwYRwbicwr7Fhr","project":"5dxSs15hZtvQDKSzFgjP","version":1}}},"identifier":"nb-cell-1","label":"nb-cell-1","html_id":"nb-cell-1","key":"adKqmBch4V"},{"type":"block","position":{"start":{"line":14,"column":0},"end":{"line":15,"column":0}},"children":[{"type":"heading","depth":2,"position":{"start":{"line":16,"column":0},"end":{"line":17,"column":0}},"children":[{"type":"text","value":"Implementation","key":"YI2iMR4JrF"}],"identifier":"implementation","label":"Implementation","html_id":"implementation","implicit":true,"key":"hSslj7xh2j"}],"data":{"id":"nb-cell-2","type":"notebook-content","iooxa":{"id":{"block":"31VvbX9D1lfXbTdOAAUM","project":"5dxSs15hZtvQDKSzFgjP","version":1}}},"identifier":"nb-cell-2","label":"nb-cell-2","html_id":"nb-cell-2","key":"JQruz4eUVw"},{"type":"block","position":{"start":{"line":18,"column":0},"end":{"line":19,"column":0}},"children":[{"type":"code","lang":"python","executable":true,"value":"%matplotlib inline\nimport numpy as np\nimport discretize\nimport matplotlib.pyplot as plt","identifier":"nb-cell-3-code","enumerator":"1","html_id":"nb-cell-3-code","key":"BQdU8lwmwU"},{"type":"output","id":"b_4eHc6L_g6gOgLaqsmbx","data":[],"identifier":"nb-cell-3-output","html_id":"nb-cell-3-output","key":"mdXAjUXWbI"}],"data":{"id":"nb-cell-3","type":"notebook-code","collapsed":false,"iooxa":{"id":{"block":"u5iNLcue0eugjI4fr9l7","project":"5dxSs15hZtvQDKSzFgjP","version":1},"outputId":{"block":"ZLAEUpQ6gbEEAVXcLMjp","project":"5dxSs15hZtvQDKSzFgjP","version":1}},"jupyter":{"outputs_hidden":false}},"identifier":"nb-cell-3","label":"nb-cell-3","html_id":"nb-cell-3","key":"LgtwFweBZ2"},{"type":"block","position":{"start":{"line":31,"column":0},"end":{"line":32,"column":0}},"children":[{"type":"heading","depth":2,"position":{"start":{"line":33,"column":0},"end":{"line":34,"column":0}},"children":[{"type":"text","value":"Create a Mesh","key":"XHkHBDOva0"}],"identifier":"create-a-mesh","label":"Create a Mesh","html_id":"create-a-mesh","implicit":true,"key":"BIxDIRf6LY"},{"type":"paragraph","position":{"start":{"line":35,"column":0},"end":{"line":36,"column":0}},"children":[{"type":"text","value":"A mesh is used to divide up space, here we will use ","key":"JassudPgjr"},{"type":"link","url":"http://docs.simpeg.xyz/content/api_core/api_Mesh.html","children":[{"type":"text","value":"SimPEG's mesh class","key":"CCuFLsmnuF"}],"urlSource":"http://docs.simpeg.xyz/content/api_core/api_Mesh.html","key":"A7mrVnDVOx"},{"type":"text","value":" to define a simple tensor mesh. By \"Tensor Mesh\" we mean that the mesh can be completely defined by the tensor products of vectors in each dimension; for a 2D mesh, we require one vector describing the cell widths in the x-direction and another describing the cell widths in the y-direction.","key":"ygsDwAxtG1"}],"key":"EN5yWslXHa"},{"type":"paragraph","position":{"start":{"line":37,"column":0},"end":{"line":38,"column":0}},"children":[{"type":"text","value":"Here, we define and plot a simple 2D mesh using SimPEG's mesh class. The cell centers boundaries are shown in blue, cell centers as red dots and cell faces as green arrows (pointing in the positive x, y - directions). Cell nodes are plotted as blue squares.","key":"m5roN7VBUq"}],"key":"G3oPn7tuMW"}],"data":{"id":"nb-cell-4","type":"notebook-content","iooxa":{"id":{"block":"U4QNnBsbw4wSfl4OxaI8","project":"5dxSs15hZtvQDKSzFgjP","version":1}}},"identifier":"nb-cell-4","label":"nb-cell-4","html_id":"nb-cell-4","key":"YGGzV3W7kX"},{"type":"block","position":{"start":{"line":39,"column":0},"end":{"line":40,"column":0}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Plot a simple tensor mesh\nhx = np.r_[2., 1., 1., 2.]  # cell widths in the x-direction\nhy = np.r_[2., 1., 1., 1., 2.]  # cell widths in the y-direction \nmesh2D = discretize.TensorMesh([hx,hy])  # construct a simple SimPEG mesh\nmesh2D.plot_grid(nodes=True, faces=True, centers=True);  # plot it!","identifier":"nb-cell-5-code","enumerator":"2","html_id":"nb-cell-5-code","key":"clRGaVa5ye"},{"type":"output","id":"vy-tJUteNncqyUt9W8YPG","data":[{"output_type":"display_data","metadata":{"needs_background":"light"},"data":{"image/png":{"content_type":"image/png","hash":"1f29cb9cebcedcb30d5caebefbf24f63","path":"/tle-finitevolume/build/1f29cb9cebcedcb30d5caebefbf24f63.png"},"text/plain":{"content":"<Figure size 432x288 with 1 Axes>","content_type":"text/plain"}}}],"identifier":"nb-cell-5-output","html_id":"nb-cell-5-output","key":"gC7QMUIJXq"}],"data":{"id":"nb-cell-5","type":"notebook-code","collapsed":false,"iooxa":{"id":{"block":"6vIZt3CB4jCaKO4lx5Pt","project":"5dxSs15hZtvQDKSzFgjP","version":1},"outputId":{"block":"xckvO9m7J4160yqss7ZQ","project":"5dxSs15hZtvQDKSzFgjP","version":1}},"jupyter":{"outputs_hidden":false}},"identifier":"nb-cell-5","label":"nb-cell-5","html_id":"nb-cell-5","key":"GKjE3Ha4Ch"},{"type":"block","position":{"start":{"line":53,"column":0},"end":{"line":54,"column":0}},"children":[{"type":"code","lang":"python","executable":true,"value":"# This can similarly be extended to 3D (this is a simple 2-cell mesh)\nhx = np.r_[2.,  2.]  # cell widths in the x-direction\nhy = np.r_[2.]  # cell widths in the y-direction \nhz = np.r_[1.]  # cell widths in the z-direction \nmesh3D = discretize.TensorMesh([hx,hy,hz])  # construct a simple SimPEG mesh\nmesh3D.plot_grid(nodes=True, faces=True, centers=True);  # plot it!","identifier":"nb-cell-6-code","enumerator":"3","html_id":"nb-cell-6-code","key":"Qn7FKrYgUR"},{"type":"output","id":"Nsh3H0oXmfnevJVO5YzX7","data":[{"output_type":"display_data","metadata":{"needs_background":"light"},"data":{"image/png":{"content_type":"image/png","hash":"d5a56ebd3c779e56b8560a92bbe2aa48","path":"/tle-finitevolume/build/d5a56ebd3c779e56b8560a92bbe2aa48.png"},"text/plain":{"content":"<Figure size 432x288 with 1 Axes>","content_type":"text/plain"}}}],"identifier":"nb-cell-6-output","html_id":"nb-cell-6-output","key":"roRB5ffzXj"}],"data":{"id":"nb-cell-6","type":"notebook-code","collapsed":false,"iooxa":{"id":{"block":"hB09wkK3yYCYTa0FbrZV","project":"5dxSs15hZtvQDKSzFgjP","version":1},"outputId":{"block":"2Wubu5Qc9nARiP9kOI37","project":"5dxSs15hZtvQDKSzFgjP","version":1}},"jupyter":{"outputs_hidden":false}},"identifier":"nb-cell-6","label":"nb-cell-6","html_id":"nb-cell-6","key":"sco8Rn7U2r"},{"type":"block","position":{"start":{"line":68,"column":0},"end":{"line":69,"column":0}},"children":[{"type":"heading","depth":2,"position":{"start":{"line":70,"column":0},"end":{"line":71,"column":0}},"children":[{"type":"text","value":"Counting things on the Mesh","key":"Szz47SX5QO"}],"identifier":"counting-things-on-the-mesh","label":"Counting things on the Mesh","html_id":"counting-things-on-the-mesh","implicit":true,"key":"pq86a0ej1q"},{"type":"paragraph","position":{"start":{"line":72,"column":0},"end":{"line":73,"column":0}},"children":[{"type":"text","value":"Once we have defined the vectors necessary for construsting the mesh, it is there are a number of properties that are often useful, including keeping track of the","key":"eF8m4oUZoZ"}],"key":"bNlS2s2NLh"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":73,"column":0},"end":{"line":79,"column":0}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":73,"column":0},"end":{"line":74,"column":0}},"children":[{"type":"text","value":"number of cells: ","key":"GZ8EYVlmIO"},{"type":"strong","children":[{"type":"inlineCode","value":"mesh.nC","key":"gNy4U8n4YP"}],"key":"nut2nZuuzV"}],"key":"JhjqzAYDfI"},{"type":"listItem","spread":true,"position":{"start":{"line":74,"column":0},"end":{"line":75,"column":0}},"children":[{"type":"text","value":"number of cells in each dimension: ","key":"X13TPfGOc8"},{"type":"strong","children":[{"type":"inlineCode","value":"mesh.vnC","key":"bDPw6CtYGx"}],"key":"ZksHlWgcyg"}],"key":"yQvWyYO9GT"},{"type":"listItem","spread":true,"position":{"start":{"line":75,"column":0},"end":{"line":76,"column":0}},"children":[{"type":"text","value":"number of faces: ","key":"jBddVv2iAB"},{"type":"strong","children":[{"type":"inlineCode","value":"mesh.nF","key":"MOvU6DJa2A"}],"key":"j8Y94nly1U"}],"key":"N3diDbCH60"},{"type":"listItem","spread":true,"position":{"start":{"line":76,"column":0},"end":{"line":79,"column":0}},"children":[{"type":"text","value":"number of x-faces: ","key":"H5xTiiqJw2"},{"type":"strong","children":[{"type":"inlineCode","value":"mesh.nFx","key":"OhmjaDU5xr"}],"key":"UJLSirkCaQ"},{"type":"text","value":" (and in each dimension ","key":"tHSRPv6Ev4"},{"type":"strong","children":[{"type":"inlineCode","value":"mesh.vnFx","key":"hxLVvQ8Cjl"}],"key":"wH0FYdFVRZ"},{"type":"text","value":" ...)\nand the list goes on. Check out ","key":"LRpokWWwEa"},{"type":"link","url":"http://docs.simpeg.xyz/content/api_core/api_FiniteVolume.html","children":[{"type":"text","value":"SimPEG's mesh documentation","key":"xTPhjHccCI"}],"urlSource":"http://docs.simpeg.xyz/content/api_core/api_FiniteVolume.html","key":"Whn6h84Ez6"},{"type":"text","value":" for more.","key":"ViJ7Wr75wQ"}],"key":"PHLE1ixmgZ"}],"key":"z8NYqmp0Z6"}],"data":{"id":"nb-cell-7","type":"notebook-content","iooxa":{"id":{"block":"ftnDOw3xDDHI7AhwNt8w","project":"5dxSs15hZtvQDKSzFgjP","version":1}}},"identifier":"nb-cell-7","label":"nb-cell-7","html_id":"nb-cell-7","key":"I687Xpl8ew"},{"type":"block","position":{"start":{"line":79,"column":0},"end":{"line":80,"column":0}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Construct a simple 2D, uniform mesh on a unit square\nmesh = discretize.TensorMesh([10, 8])\nmesh.plot_grid();","identifier":"nb-cell-8-code","enumerator":"4","html_id":"nb-cell-8-code","key":"DhRM1TYOrl"},{"type":"output","id":"NNmZSyEMetYuIep5IuypU","data":[{"output_type":"display_data","metadata":{"needs_background":"light"},"data":{"image/png":{"content_type":"image/png","hash":"8cdc29a719540ab674ee3decadc892d9","path":"/tle-finitevolume/build/8cdc29a719540ab674ee3decadc892d9.png"},"text/plain":{"content":"<Figure size 432x288 with 1 Axes>","content_type":"text/plain"}}}],"identifier":"nb-cell-8-output","html_id":"nb-cell-8-output","key":"zAkUeRoCjW"}],"data":{"id":"nb-cell-8","type":"notebook-code","collapsed":false,"iooxa":{"id":{"block":"G9qmjOQnYIxzwf2KsU1O","project":"5dxSs15hZtvQDKSzFgjP","version":1},"outputId":{"block":"SJHqzfqQNfHBzziCHPFR","project":"5dxSs15hZtvQDKSzFgjP","version":1}},"jupyter":{"outputs_hidden":false}},"identifier":"nb-cell-8","label":"nb-cell-8","html_id":"nb-cell-8","key":"Ro59rU4pCp"},{"type":"block","position":{"start":{"line":91,"column":0},"end":{"line":92,"column":0}},"children":[{"type":"code","lang":"python","executable":true,"value":"\"The mesh has {nC} cells and {nF} faces\".format(nC=mesh.nC, nF=mesh.nF)","identifier":"nb-cell-9-code","enumerator":"5","html_id":"nb-cell-9-code","key":"W7opw84X53"},{"type":"output","id":"IMNQJ7-z-1zo4p8bEI0aw","data":[{"output_type":"execute_result","execution_count":5,"metadata":{},"data":{"text/plain":{"content":"'The mesh has 80 cells and 178 faces'","content_type":"text/plain"}}}],"identifier":"nb-cell-9-output","html_id":"nb-cell-9-output","key":"DBaegD0xxn"}],"data":{"id":"nb-cell-9","type":"notebook-code","collapsed":false,"iooxa":{"id":{"block":"lvWVd47J43QrzRQ9sItP","project":"5dxSs15hZtvQDKSzFgjP","version":1},"outputId":{"block":"dFlM1ZvjYYsjPX4NXYoO","project":"5dxSs15hZtvQDKSzFgjP","version":1}},"jupyter":{"outputs_hidden":false}},"identifier":"nb-cell-9","label":"nb-cell-9","html_id":"nb-cell-9","key":"K2LrhdaYoV"},{"type":"block","position":{"start":{"line":101,"column":0},"end":{"line":102,"column":0}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Sometimes you need properties in each dimension\n(\"In the x dimension we have {vnCx} cells. This is because our mesh is {vnCx} x {vnCy}.\").format(\n    vnCx=mesh.vnC[0],\n    vnCy=mesh.vnC[1]\n)","identifier":"nb-cell-10-code","enumerator":"6","html_id":"nb-cell-10-code","key":"LEEF37F9I3"},{"type":"output","id":"mhhvboCO1oaMS-WIuN1US","data":[{"output_type":"execute_result","execution_count":6,"metadata":{},"data":{"text/plain":{"content":"'In the x dimension we have 10 cells. This is because our mesh is 10 x 8.'","content_type":"text/plain"}}}],"identifier":"nb-cell-10-output","html_id":"nb-cell-10-output","key":"JMdldGZyAE"}],"data":{"id":"nb-cell-10","type":"notebook-code","collapsed":false,"iooxa":{"id":{"block":"nPiNQFTv4kQtARxDz6DG","project":"5dxSs15hZtvQDKSzFgjP","version":1},"outputId":{"block":"nmMoUHaSDU0QXFhLNlik","project":"5dxSs15hZtvQDKSzFgjP","version":1}},"jupyter":{"outputs_hidden":false}},"identifier":"nb-cell-10","label":"nb-cell-10","html_id":"nb-cell-10","key":"zjKkIHt8YN"},{"type":"block","position":{"start":{"line":115,"column":0},"end":{"line":116,"column":0}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Similarly, we need to keep track of the faces, we have face grids in both the x, and y \n# directions. \n\n(\"Faces are vectors so the number of faces pointing in the x direction is {nFx} = {vnFx0} x {vnFx1} \"\n\"In the y direction we have {nFy} = {vnFy0} x {vnFy1} faces\").format(\n    nFx=mesh.nFx,\n    vnFx0=mesh.vnFx[0],\n    vnFx1=mesh.vnFx[1],\n    nFy=mesh.nFy,\n    vnFy0=mesh.vnFy[0],\n    vnFy1=mesh.vnFy[1]  \n)","identifier":"nb-cell-11-code","enumerator":"7","html_id":"nb-cell-11-code","key":"zSArrRJCSx"},{"type":"output","id":"fR5AGK5eQuJSL7Ru4J-wm","data":[{"output_type":"execute_result","execution_count":7,"metadata":{},"data":{"text/plain":{"content":"'Faces are vectors so the number of faces pointing in the x direction is 88 = 11 x 8 In the y direction we have 90 = 10 x 9 faces'","content_type":"text/plain"}}}],"identifier":"nb-cell-11-output","html_id":"nb-cell-11-output","key":"t7nXjk4xtN"}],"data":{"id":"nb-cell-11","type":"notebook-code","collapsed":false,"iooxa":{"id":{"block":"vrJkvEQEzgwndMlrG867","project":"5dxSs15hZtvQDKSzFgjP","version":1},"outputId":{"block":"8h4wse5MAp4f8STeVEhV","project":"5dxSs15hZtvQDKSzFgjP","version":1}},"jupyter":{"outputs_hidden":false}},"identifier":"nb-cell-11","label":"nb-cell-11","html_id":"nb-cell-11","key":"eBnlqrA2A2"},{"type":"block","position":{"start":{"line":136,"column":0},"end":{"line":137,"column":0}},"children":[{"type":"heading","depth":2,"position":{"start":{"line":138,"column":0},"end":{"line":139,"column":0}},"children":[{"type":"text","value":"Simple properties of the mesh","key":"jwWjigWo4F"}],"identifier":"simple-properties-of-the-mesh","label":"Simple properties of the mesh","html_id":"simple-properties-of-the-mesh","implicit":true,"key":"uGYZZOSgI6"},{"type":"paragraph","position":{"start":{"line":140,"column":0},"end":{"line":141,"column":0}},"children":[{"type":"text","value":"There are a few things that we will need to know about the mesh and each of it's cells, including the","key":"fDC69VrncZ"}],"key":"MLZH8tkese"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":141,"column":0},"end":{"line":144,"column":0}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":141,"column":0},"end":{"line":142,"column":0}},"children":[{"type":"text","value":"cell volume: ","key":"t0IDD6yso8"},{"type":"strong","children":[{"type":"inlineCode","value":"mesh.vol","key":"vbjMMGhuLa"}],"key":"lfnfuZDyV1"},{"type":"text","value":",","key":"TxJewG1p59"}],"key":"JjNpezKcTA"},{"type":"listItem","spread":true,"position":{"start":{"line":142,"column":0},"end":{"line":144,"column":0}},"children":[{"type":"text","value":"face area: ","key":"oFenZ24uf0"},{"type":"strong","children":[{"type":"inlineCode","value":"mesh.area","key":"QuSCZHCarD"}],"key":"IC85pdwZ18"},{"type":"text","value":".","key":"btQmnxTVa5"}],"key":"c4GGyvlAHZ"}],"key":"xtLfA8S1AL"},{"type":"paragraph","position":{"start":{"line":144,"column":0},"end":{"line":145,"column":0}},"children":[{"type":"text","value":"For consistency between 2D and 3D we refer to faces having area and cells having volume, regardless of their dimensionality.","key":"Pq3xQmoA2m"}],"key":"usCi5tvvz4"}],"data":{"id":"nb-cell-12","type":"notebook-content","iooxa":{"id":{"block":"YqKilx0rAN3jNZJcSHeL","project":"5dxSs15hZtvQDKSzFgjP","version":1}}},"identifier":"nb-cell-12","label":"nb-cell-12","html_id":"nb-cell-12","key":"HCU4pU01hx"},{"type":"block","position":{"start":{"line":146,"column":0},"end":{"line":147,"column":0}},"children":[{"type":"code","lang":"python","executable":true,"value":"# On a uniform mesh, not suprisingly, the cell volumes are all the same\nplt.colorbar(mesh.plot_image(mesh.cell_volumes, grid=True)[0])\nplt.title('Cell Volumes');","identifier":"nb-cell-13-code","enumerator":"8","html_id":"nb-cell-13-code","key":"tYinYULk63"},{"type":"output","id":"Rkw4oyLpvwwawwnYsNnh9","data":[{"output_type":"display_data","metadata":{"needs_background":"light"},"data":{"image/png":{"content_type":"image/png","hash":"31646469e26633b05c92d5eae87e11bf","path":"/tle-finitevolume/build/31646469e26633b05c92d5eae87e11bf.png"},"text/plain":{"content":"<Figure size 432x288 with 2 Axes>","content_type":"text/plain"}}}],"identifier":"nb-cell-13-output","html_id":"nb-cell-13-output","key":"FKiItvXCW4"}],"data":{"id":"nb-cell-13","type":"notebook-code","collapsed":false,"iooxa":{"id":{"block":"KBXPgaqIeIFC8qwzST5N","project":"5dxSs15hZtvQDKSzFgjP","version":1},"outputId":{"block":"WYdC9NmPz5GcfQ6PTIyZ","project":"5dxSs15hZtvQDKSzFgjP","version":1}},"jupyter":{"outputs_hidden":false}},"identifier":"nb-cell-13","label":"nb-cell-13","html_id":"nb-cell-13","key":"IzVkA9oSsR"},{"type":"block","position":{"start":{"line":158,"column":0},"end":{"line":159,"column":0}},"children":[{"type":"code","lang":"python","executable":true,"value":"# All cell volumes are defined by the product of the cell widths \n\nassert (np.all(mesh.cell_volumes == 1./mesh.vnC[0] * 1./mesh.vnC[1]))  # all cells have the same volume on a uniform, unit cell mesh\n\nprint((\"The cell volume is the product of the cell widths in the x and y dimensions: \"\n\"{hx} x {hy} = {vol} \").format(\n     hx = 1./mesh.vnC[0], # we are using a uniform, unit square mesh\n     hy = 1./mesh.vnC[1],\n     vol = mesh.cell_volumes[0]\n))","identifier":"nb-cell-14-code","enumerator":"9","html_id":"nb-cell-14-code","key":"wMqLU6OyZ5"},{"type":"output","id":"vQFDPV8DLngJ-f9nkxJxP","data":[{"name":"stdout","output_type":"stream","text":"The cell volume is the product of the cell widths in the x and y dimensions: 0.1 x 0.125 = 0.0125 \n"}],"identifier":"nb-cell-14-output","html_id":"nb-cell-14-output","key":"L8hgwTMGw1"}],"data":{"id":"nb-cell-14","type":"notebook-code","collapsed":false,"iooxa":{"id":{"block":"VlfHhMsbuBQ6RYGtTVKe","project":"5dxSs15hZtvQDKSzFgjP","version":1},"outputId":{"block":"KxHb4NhsoonX0EiddenS","project":"5dxSs15hZtvQDKSzFgjP","version":1}},"jupyter":{"outputs_hidden":false}},"identifier":"nb-cell-14","label":"nb-cell-14","html_id":"nb-cell-14","key":"IGKSItUApu"},{"type":"block","position":{"start":{"line":177,"column":0},"end":{"line":178,"column":0}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Similarly, all x-faces should have the same area, equal to that of the length in the y-direction\nassert np.all(mesh.face_areas[:mesh.nFx] == 1.0/mesh.shape_cells[1])  # because our domain is a unit square\n\n# and all y-faces have an \"area\" equal to the length in the x-dimension\nassert np.all(mesh.face_areas[mesh.nFx:] == 1.0/mesh.shape_cells[0])\n\nprint((\"The area of the x-faces is {xFaceArea} and the area of the y-faces is {yFaceArea}\").format(\n  xFaceArea=mesh.face_areas[0],\n  yFaceArea=mesh.face_areas[mesh.nFx]\n))\n\nmesh.plot_grid(faces=True);","identifier":"nb-cell-15-code","enumerator":"10","html_id":"nb-cell-15-code","key":"FPZn3rI5z8"},{"type":"output","id":"7Q8bDG0GOjVp-YyAhamYT","data":[{"name":"stdout","output_type":"stream","text":"The area of the x-faces is 0.125 and the area of the y-faces is 0.1\n"},{"output_type":"display_data","metadata":{"needs_background":"light"},"data":{"image/png":{"content_type":"image/png","hash":"e5e50abd399956dfa28f95c51a950116","path":"/tle-finitevolume/build/e5e50abd399956dfa28f95c51a950116.png"},"text/plain":{"content":"<Figure size 432x288 with 1 Axes>","content_type":"text/plain"}}}],"identifier":"nb-cell-15-output","html_id":"nb-cell-15-output","key":"V0Zqybt5HD"}],"data":{"id":"nb-cell-15","type":"notebook-code","collapsed":false,"iooxa":{"id":{"block":"oA7f5Uusvs1wKuWwJKVg","project":"5dxSs15hZtvQDKSzFgjP","version":1},"outputId":{"block":"xx02RHnr99AUiNYfu73e","project":"5dxSs15hZtvQDKSzFgjP","version":1}},"jupyter":{"outputs_hidden":false}},"identifier":"nb-cell-15","label":"nb-cell-15","html_id":"nb-cell-15","key":"fpk9x537fX"},{"type":"block","position":{"start":{"line":198,"column":0},"end":{"line":199,"column":0}},"children":[{"type":"code","lang":"python","executable":true,"value":"# On a non-uniform tensor mesh, the first mesh we defined, the cell volumes vary\n\n# hx = np.r_[2., 1., 1., 2.]  # cell widths in the x-direction\n# hy = np.r_[2., 1., 1., 1., 2.]  # cell widths in the y-direction \n# mesh2D = Mesh.TensorMesh([hx,hy])  # construct a simple SimPEG mesh\n\nplt.colorbar(mesh2D.plot_image(mesh2D.cell_volumes, grid=True)[0])\nplt.title('Cell Volumes');","identifier":"nb-cell-16-code","enumerator":"11","html_id":"nb-cell-16-code","key":"Lz4BLTdIBY"},{"type":"output","id":"Qh2EMLqeKAQYl81ctw8l9","data":[{"output_type":"display_data","metadata":{"needs_background":"light"},"data":{"image/png":{"content_type":"image/png","hash":"2b3bd52e09f087465b8927cca4e92ae6","path":"/tle-finitevolume/build/2b3bd52e09f087465b8927cca4e92ae6.png"},"text/plain":{"content":"<Figure size 432x288 with 2 Axes>","content_type":"text/plain"}}}],"identifier":"nb-cell-16-output","html_id":"nb-cell-16-output","key":"Pjuq3nq8oL"}],"data":{"id":"nb-cell-16","type":"notebook-code","collapsed":false,"iooxa":{"id":{"block":"QTSmVl7BRDmfL2so2o5S","project":"5dxSs15hZtvQDKSzFgjP","version":1},"outputId":{"block":"pSWs4leGY5sKmTTsd90q","project":"5dxSs15hZtvQDKSzFgjP","version":1}},"jupyter":{"outputs_hidden":false}},"identifier":"nb-cell-16","label":"nb-cell-16","html_id":"nb-cell-16","key":"xbQ7Yz7dTD"},{"type":"block","position":{"start":{"line":215,"column":0},"end":{"line":216,"column":0}},"children":[{"type":"heading","depth":2,"position":{"start":{"line":217,"column":0},"end":{"line":218,"column":0}},"children":[{"type":"text","value":"Grids and Putting things on a mesh","key":"NSeIMdaL3b"}],"identifier":"grids-and-putting-things-on-a-mesh","label":"Grids and Putting things on a mesh","html_id":"grids-and-putting-things-on-a-mesh","implicit":true,"key":"xWSTeKlNhs"},{"type":"paragraph","position":{"start":{"line":219,"column":0},"end":{"line":220,"column":0}},"children":[{"type":"text","value":"When storing and working with features of the mesh such as cell volumes, face areas, in a linear algebra sense, it is useful to think of them as vectors... so the way we unwrap is super important.","key":"wFpRQxJaPD"}],"key":"Z9KgEP0ujD"},{"type":"paragraph","position":{"start":{"line":221,"column":0},"end":{"line":222,"column":0}},"children":[{"type":"text","value":"Most importantly we want some compatibility with ","key":"bc7Rahj3YC"},{"type":"link","url":"https://en.wikipedia.org/wiki/Vectorization_(mathematics)#Compatibility_with_Kronecker_products","children":[{"type":"text","value":"Kronecker products","key":"WGTlPMbi2l"}],"urlSource":"https://en.wikipedia.org/wiki/Vectorization_(mathematics)#Compatibility_with_Kronecker_products","data":{"page":"Vectorization_(mathematics)#Compatibility_with_Kronecker_products","wiki":"https://en.wikipedia.org/","lang":"en"},"internal":false,"protocol":"wiki","key":"kwew6S2ZAM"},{"type":"text","value":" as we will see later! This actually leads to us thinking about unwrapping our vectors column first. This column major ordering is inspired by linear algebra conventions which are the standard in Matlab, Fortran, Julia, but sadly not Python. To make your life a bit easier, you can use our MakeVector ","key":"WtMoB713if"},{"type":"inlineCode","value":"mkvc","key":"qES8wAEhJA"},{"type":"text","value":" function from ","key":"hoR3bliR6Z"},{"type":"inlineCode","value":"SimPEG.utils","key":"ELZk7TuPOR"}],"key":"ZZMDvjdwdR"}],"data":{"id":"nb-cell-17","type":"notebook-content","iooxa":{"id":{"block":"iYuxGz2XNeayDw5XhYBl","project":"5dxSs15hZtvQDKSzFgjP","version":1}}},"identifier":"nb-cell-17","label":"nb-cell-17","html_id":"nb-cell-17","key":"T19ELfwrus"},{"type":"block","position":{"start":{"line":224,"column":0},"end":{"line":225,"column":0}},"children":[{"type":"code","lang":"python","executable":true,"value":"from SimPEG.utils import mkvc","identifier":"nb-cell-18-code","enumerator":"12","html_id":"nb-cell-18-code","key":"qyWG1cQX6U"},{"type":"output","id":"LyB2ha-rKkHUdxF-CK59z","data":[],"identifier":"nb-cell-18-output","html_id":"nb-cell-18-output","key":"HoOXGDlHWm"}],"data":{"id":"nb-cell-18","type":"notebook-code","iooxa":{"id":{"block":"zUbGxQp2QwBBlE8xkLUm","project":"5dxSs15hZtvQDKSzFgjP","version":1},"outputId":{"block":"kv2nZ3gpFcflCBvotkbY","project":"5dxSs15hZtvQDKSzFgjP","version":1}},"tags":[]},"identifier":"nb-cell-18","label":"nb-cell-18","html_id":"nb-cell-18","key":"yB9bgEPUdM"},{"type":"block","position":{"start":{"line":234,"column":0},"end":{"line":235,"column":0}},"children":[{"type":"code","lang":"python","executable":true,"value":"mesh = discretize.TensorMesh([3,4])\n\nvec = np.arange(mesh.nC)\n\nrow_major = vec.reshape(mesh.vnC, order='C')\nprint('Row major ordering (standard python)')\nprint(row_major)\n\ncol_major = vec.reshape(mesh.vnC, order='F')\nprint('\\nColumn major ordering (what we want!)')\nprint(col_major)\n\n# mkvc unwraps using column major ordering, so we expect \nassert np.all(mkvc(col_major) == vec)\n\nprint('\\nWe get back the expected vector using mkvc: {vec}'.format(vec=mkvc(col_major)))","identifier":"nb-cell-19-code","enumerator":"13","html_id":"nb-cell-19-code","key":"NS1jzpitOI"},{"type":"output","id":"74zuWleuemZAQNGfcO7MB","data":[{"name":"stdout","output_type":"stream","text":"Row major ordering (standard python)\n[[ 0  1  2  3]\n [ 4  5  6  7]\n [ 8  9 10 11]]\n\nColumn major ordering (what we want!)\n[[ 0  3  6  9]\n [ 1  4  7 10]\n [ 2  5  8 11]]\n\nWe get back the expected vector using mkvc: [ 0  1  2  3  4  5  6  7  8  9 10 11]\n"}],"identifier":"nb-cell-19-output","html_id":"nb-cell-19-output","key":"VfU7qu6gzu"}],"data":{"id":"nb-cell-19","type":"notebook-code","collapsed":false,"iooxa":{"id":{"block":"zxMDGVcacqEW9Munuecg","project":"5dxSs15hZtvQDKSzFgjP","version":1},"outputId":{"block":"PJiiIJebzHM3nfSaXgUY","project":"5dxSs15hZtvQDKSzFgjP","version":1}},"jupyter":{"outputs_hidden":false}},"identifier":"nb-cell-19","label":"nb-cell-19","html_id":"nb-cell-19","key":"f2HALnBBmz"},{"type":"block","position":{"start":{"line":259,"column":0},"end":{"line":260,"column":0}},"children":[{"type":"heading","depth":3,"position":{"start":{"line":261,"column":0},"end":{"line":262,"column":0}},"children":[{"type":"text","value":"Grids on the Mesh","key":"MOzTmuJDOz"}],"identifier":"grids-on-the-mesh","label":"Grids on the Mesh","html_id":"grids-on-the-mesh","implicit":true,"key":"pzZoDhoTjm"},{"type":"paragraph","position":{"start":{"line":263,"column":0},"end":{"line":264,"column":0}},"children":[{"type":"text","value":"When defining where things are located, we need the spatial locations of where we are discretizing different aspects of the mesh. A SimPEG Mesh has several grids. In particular, here it is handy to look at the","key":"VH9cRvvpVM"}],"key":"cqfuBeQV2Y"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":264,"column":0},"end":{"line":268,"column":0}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":264,"column":0},"end":{"line":265,"column":0}},"children":[{"type":"text","value":"Cell centered grid: ","key":"RLc5yTSsJh"},{"type":"strong","children":[{"type":"inlineCode","value":"mesh.gridCC","key":"nHXwo6RMJ9"}],"key":"aE58nuRPb7"}],"key":"nd36zydcca"},{"type":"listItem","spread":true,"position":{"start":{"line":265,"column":0},"end":{"line":266,"column":0}},"children":[{"type":"text","value":"x-Face grid: ","key":"dapR5aTGum"},{"type":"strong","children":[{"type":"inlineCode","value":"mesh.gridFx","key":"fJrPptqzq2"}],"key":"wSkDogk68B"}],"key":"BdJk7rHiqP"},{"type":"listItem","spread":true,"position":{"start":{"line":266,"column":0},"end":{"line":268,"column":0}},"children":[{"type":"text","value":"y-Face grid: ","key":"F38TRbwkh2"},{"type":"strong","children":[{"type":"inlineCode","value":"mesh.gridFy","key":"MQBnf012Wf"}],"key":"cfkaavYGuw"}],"key":"Kzg2fBFMzM"}],"key":"C6N3AkJ60y"}],"data":{"id":"nb-cell-20","type":"notebook-content","iooxa":{"id":{"block":"tw93rPtVHI9QuDdriDNz","project":"5dxSs15hZtvQDKSzFgjP","version":1}}},"identifier":"nb-cell-20","label":"nb-cell-20","html_id":"nb-cell-20","key":"iBRN4LvWKr"},{"type":"block","position":{"start":{"line":268,"column":0},"end":{"line":269,"column":0}},"children":[{"type":"code","lang":"python","executable":true,"value":"# gridCC\n\"The cell centered grid is {gridCCshape0} x {gridCCshape1} since we have {nC} cells in the mesh and it is {dim} dimensions\".format(\n    gridCCshape0=mesh.gridCC.shape[0],\n    gridCCshape1=mesh.gridCC.shape[1],\n    nC=mesh.nC,\n    dim=mesh.dim\n)","identifier":"nb-cell-21-code","enumerator":"14","html_id":"nb-cell-21-code","key":"GJsGsNRTpY"},{"type":"output","id":"pjk5ypZDKU3pMHluI_eis","data":[{"output_type":"execute_result","execution_count":15,"metadata":{},"data":{"text/plain":{"content":"'The cell centered grid is 12 x 2 since we have 12 cells in the mesh and it is 2 dimensions'","content_type":"text/plain"}}}],"identifier":"nb-cell-21-output","html_id":"nb-cell-21-output","key":"jw7fo5wtVf"}],"data":{"id":"nb-cell-21","type":"notebook-code","collapsed":false,"iooxa":{"id":{"block":"HfYPYV9I7HuZro1HhobY","project":"5dxSs15hZtvQDKSzFgjP","version":1},"outputId":{"block":"f9apRNT6DPD9rdWA7a7V","project":"5dxSs15hZtvQDKSzFgjP","version":1}},"jupyter":{"outputs_hidden":false}},"identifier":"nb-cell-21","label":"nb-cell-21","html_id":"nb-cell-21","key":"c7SOJ3QLry"},{"type":"block","position":{"start":{"line":284,"column":0},"end":{"line":285,"column":0}},"children":[{"type":"code","lang":"python","executable":true,"value":"# The first column is the x-locations, and the second the y-locations\n\nmesh.plot_grid()\nplt.plot(mesh.gridCC[:,0], mesh.gridCC[:,1],'ro');","identifier":"nb-cell-22-code","enumerator":"15","html_id":"nb-cell-22-code","key":"RF4lW5GFqQ"},{"type":"output","id":"hTiFBQDySgezQu7RzD62q","data":[{"output_type":"display_data","metadata":{"needs_background":"light"},"data":{"image/png":{"content_type":"image/png","hash":"6c7eac24adb77ce48d93829d327c15f6","path":"/tle-finitevolume/build/6c7eac24adb77ce48d93829d327c15f6.png"},"text/plain":{"content":"<Figure size 432x288 with 1 Axes>","content_type":"text/plain"}}}],"identifier":"nb-cell-22-output","html_id":"nb-cell-22-output","key":"fVuRstYkms"}],"data":{"id":"nb-cell-22","type":"notebook-code","collapsed":false,"iooxa":{"id":{"block":"HXACXgIWqDWvjIqmqOqN","project":"5dxSs15hZtvQDKSzFgjP","version":1},"outputId":{"block":"O2AH2dpGVmS0XyPlS7F9","project":"5dxSs15hZtvQDKSzFgjP","version":1}},"jupyter":{"outputs_hidden":false}},"identifier":"nb-cell-22","label":"nb-cell-22","html_id":"nb-cell-22","key":"yiyuCJ4svI"},{"type":"block","position":{"start":{"line":297,"column":0},"end":{"line":298,"column":0}},"children":[{"type":"code","lang":"python","executable":true,"value":"# gridFx\n\"Similarly, the x-Face grid is {gridFxshape0} x {gridFxshape1} since we have {nFx} x-faces in the mesh and it is {dim} dimensions\".format(\n    gridFxshape0=mesh.gridFx.shape[0],\n    gridFxshape1=mesh.gridFx.shape[1],\n    nFx=mesh.nFx,\n    dim=mesh.dim\n)","identifier":"nb-cell-23-code","enumerator":"16","html_id":"nb-cell-23-code","key":"TALHNa0fzU"},{"type":"output","id":"W0rGhtOVKDRAju_vFJ6SJ","data":[{"output_type":"execute_result","execution_count":17,"metadata":{},"data":{"text/plain":{"content":"'Similarly, the x-Face grid is 16 x 2 since we have 16 x-faces in the mesh and it is 2 dimensions'","content_type":"text/plain"}}}],"identifier":"nb-cell-23-output","html_id":"nb-cell-23-output","key":"WMuitER7mG"}],"data":{"id":"nb-cell-23","type":"notebook-code","collapsed":false,"iooxa":{"id":{"block":"HEV3RMoJYDtGoaMOkuQF","project":"5dxSs15hZtvQDKSzFgjP","version":1},"outputId":{"block":"io87u10KBNKvCcEJcI4F","project":"5dxSs15hZtvQDKSzFgjP","version":1}},"jupyter":{"outputs_hidden":false}},"identifier":"nb-cell-23","label":"nb-cell-23","html_id":"nb-cell-23","key":"uyUA0tHFT0"},{"type":"block","position":{"start":{"line":313,"column":0},"end":{"line":314,"column":0}},"children":[{"type":"code","lang":"python","executable":true,"value":"mesh.plot_grid()\nplt.plot(mesh.gridCC[:,0], mesh.gridCC[:,1],'ro')\nplt.plot(mesh.gridFx[:,0], mesh.gridFx[:,1],'g>');","identifier":"nb-cell-24-code","enumerator":"17","html_id":"nb-cell-24-code","key":"XFOUBdhHOv"},{"type":"output","id":"1wkQuYkT7g3w7HDm0wBsW","data":[{"output_type":"display_data","metadata":{"needs_background":"light"},"data":{"image/png":{"content_type":"image/png","hash":"deb13885c5ccbbd0c5b206599107f2d5","path":"/tle-finitevolume/build/deb13885c5ccbbd0c5b206599107f2d5.png"},"text/plain":{"content":"<Figure size 432x288 with 1 Axes>","content_type":"text/plain"}}}],"identifier":"nb-cell-24-output","html_id":"nb-cell-24-output","key":"sbdR3WPhGe"}],"data":{"id":"nb-cell-24","type":"notebook-code","collapsed":false,"iooxa":{"id":{"block":"GTqLVInFdl54om9fDgJJ","project":"5dxSs15hZtvQDKSzFgjP","version":1},"outputId":{"block":"0a9nswPq2UKzuHVPq3qw","project":"5dxSs15hZtvQDKSzFgjP","version":1}},"jupyter":{"outputs_hidden":false}},"identifier":"nb-cell-24","label":"nb-cell-24","html_id":"nb-cell-24","key":"vBQ4u0RHpk"},{"type":"block","position":{"start":{"line":325,"column":0},"end":{"line":326,"column":0}},"children":[{"type":"heading","depth":2,"position":{"start":{"line":327,"column":0},"end":{"line":328,"column":0}},"children":[{"type":"text","value":"Putting a Model on a Mesh","key":"oKrDzp03aE"}],"identifier":"putting-a-model-on-a-mesh","label":"Putting a Model on a Mesh","html_id":"putting-a-model-on-a-mesh","implicit":true,"key":"iWK9rWpVBT"},{"type":"paragraph","position":{"start":{"line":329,"column":0},"end":{"line":330,"column":0}},"children":[{"type":"text","value":"In ","key":"UgxwKzo8m5"},{"type":"link","url":"/index","children":[{"type":"text","value":"Getting Started","key":"YSAO76qfST"}],"urlSource":"index.ipynb","internal":true,"dataUrl":"/index.json","protocol":"file","key":"yj5P9hcEW8"},{"type":"text","value":", we constructed a model of a block in a whole-space, here we revisit it having defined the elements of the mesh we are using.","key":"KNoyT1cHeO"}],"key":"bJEgcU3sF4"}],"data":{"id":"nb-cell-25","type":"notebook-content","iooxa":{"id":{"block":"6c0LSWMZUTwCuNv5WE5x","project":"5dxSs15hZtvQDKSzFgjP","version":1}}},"identifier":"nb-cell-25","label":"nb-cell-25","html_id":"nb-cell-25","key":"Xl2HStNE3h"},{"type":"block","position":{"start":{"line":331,"column":0},"end":{"line":332,"column":0}},"children":[{"type":"code","lang":"python","executable":true,"value":"mesh = discretize.TensorMesh([100, 80])  # setup a mesh on which to solve\n\n# model parameters\nsigma_background = 1.  # Conductivity of the background, S/m\nsigma_block = 10.  # Conductivity of the block, S/m\n\n# add a block to our model\nx_block = np.r_[0.4, 0.6]\ny_block = np.r_[0.4, 0.6]\n\n# assign them on the mesh\nsigma = sigma_background * np.ones(mesh.nC)  # create a physical property model \n\nblock_indices = ((mesh.gridCC[:,0] >= x_block[0]) & # left boundary \n                 (mesh.gridCC[:,0] <= x_block[1]) & # right boudary\n                 (mesh.gridCC[:,1] >= y_block[0]) & # bottom boundary\n                 (mesh.gridCC[:,1] <= y_block[1]))  # top boundary\n\n# add the block to the physical property model\nsigma[block_indices] = sigma_block\n\n# plot it!\nplt.colorbar(mesh.plot_image(sigma)[0])\nplt.title('Electrical Conductivity, $\\sigma$');","identifier":"nb-cell-26-code","enumerator":"18","html_id":"nb-cell-26-code","key":"aGogbTNUZM"},{"type":"output","id":"rHfcKchQnmuWY6HFPi4u9","data":[{"output_type":"display_data","metadata":{"needs_background":"light"},"data":{"image/png":{"content_type":"image/png","hash":"f9e50358a05a474a219d15952fa333f0","path":"/tle-finitevolume/build/f9e50358a05a474a219d15952fa333f0.png"},"text/plain":{"content":"<Figure size 432x288 with 2 Axes>","content_type":"text/plain"}}}],"identifier":"nb-cell-26-output","html_id":"nb-cell-26-output","key":"seLIx2ANay"}],"data":{"id":"nb-cell-26","type":"notebook-code","collapsed":false,"iooxa":{"id":{"block":"f3i0WEJ4xANDPhosKmtn","project":"5dxSs15hZtvQDKSzFgjP","version":1},"outputId":{"block":"RA8M46spaOZUYPnvnqPX","project":"5dxSs15hZtvQDKSzFgjP","version":1}},"jupyter":{"outputs_hidden":false}},"identifier":"nb-cell-26","label":"nb-cell-26","html_id":"nb-cell-26","key":"SYFjUh8uBG"},{"type":"block","position":{"start":{"line":364,"column":0},"end":{"line":365,"column":0}},"children":[{"type":"heading","depth":2,"position":{"start":{"line":366,"column":0},"end":{"line":367,"column":0}},"children":[{"type":"text","value":"Next up ...","key":"bg02wmbt3F"}],"identifier":"next-up","label":"Next up ...","html_id":"next-up","implicit":true,"key":"jM3I7UNrqy"},{"type":"paragraph","position":{"start":{"line":367,"column":0},"end":{"line":368,"column":0}},"children":[{"type":"text","value":"In the ","key":"KR7s31z3Vp"},{"type":"link","url":"/divergence","children":[{"type":"text","value":"next notebook","key":"f6nay8msfm"}],"urlSource":"divergence.ipynb","internal":true,"dataUrl":"/divergence.json","protocol":"file","key":"O2wzkNHwJq"},{"type":"text","value":", we will work through defining the discrete divergence.","key":"guHdAkZlmt"}],"key":"w0LudHXMb6"}],"data":{"id":"nb-cell-27","type":"notebook-content","iooxa":{"id":{"block":"FE3aXye2AXg0v2XloGeS","project":"5dxSs15hZtvQDKSzFgjP","version":1}}},"identifier":"nb-cell-27","label":"nb-cell-27","html_id":"nb-cell-27","key":"jGQa1hYG9i"}],"key":"zj7iWSbNkG"},"references":{"cite":{"order":[],"data":{}}},"footer":{},"domain":"http://localhost:3000"}